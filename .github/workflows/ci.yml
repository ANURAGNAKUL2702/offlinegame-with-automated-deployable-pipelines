name: CI for React App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Step 3: Cache Node.js modules
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 5: Run linting
      - name: Run Linting
        run: npm run lint
        continue-on-error: true

      # Step 6: Run tests
      - name: Run Tests
        run: npm test -- --ci --coverage --watchAll=false

      # Step 7: Build application
      - name: Build Application
        run: npm run build

      # Step 8: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t my-react-app:${{ github.sha }} .

      # Step 9: Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 10: Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker tag my-react-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

      # Step 11: Upload build artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  notify_status:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: |
            ðŸš€ CI Pipeline [${{ job.status }}] - ${{ github.repository }}
          to: "your-email@gmail.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}> "
          body: |
            Hello,
            The CI workflow for your React app has finished.

            ðŸ”¹ Repo: ${{ github.repository }}
            ðŸ”¹ Branch: ${{ github.ref }}
            ðŸ”¹ Run ID: ${{ github.run_id }}

            ðŸ“Œ Status: ${{ job.status }}
            âœ… Passed steps will upload build artifacts and push Docker image.
